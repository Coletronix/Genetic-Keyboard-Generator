Since again the simulation completed with no errors, there were no issues with the simulated memory stage implementation. Finally, the a post-implementation simulation was performed to gauge how the memory stage might perform in the real world. This simulation is presented in. In conclusion, the memory and writeback stages of the MIPS processor were successfully implemented using reference Verilog files and various simulation techniques. These stages offer memory to the system and redirect signals back into previous stages of the system, tying the results computed by previous units together. /par For this exercise, Verilog code for the data memory and writeback stage was provided to be translated into VHDL code. 
/par The Verilog code for data memory described a rising edge triggered memory with words of storage space and two special addresses. Addresses and were dedicated to reading memory mapped switches and writing to the seven segment display respectively. As a result, Address 1022 cannot be written to, and address 1023 cannot be read from in any meaningful way. 
/par The writeback stage was much simpler, describes as most of the signals from previous stages propagated through, with two of the signals chosen as feedback Result. In a MIPS processor the final two stages, memory and writeback, tie the results computed by previous units together. The purpose of the memory stage is to offer memory to the system which can be used for longer term storage/loading, and the writeback stage redirects several signals back into previous stages of the system. These stages were created by converting reference Verilog files into VHDL, and simulating them with various simulation techniques. These simulations showed the implementation of these stages to be successful. The integrated circuit IC is a dual four to one line multiplexer. In this exercise, a dataflow, behavioral, and structural architecture was designed for the IC in VHDL. The logic circuit diagram was first analyzed to gain understanding of the functionality of the IC. Then, each architecture was implemented in VHDL, and given different simulated propagation times. Finally, each architecture was simulated with various inputs, and the results were checked to verify that each implementation was successful.